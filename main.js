
//Директивы это киллер фича AngularJS, они позволяют создавать создавать многоразовые html элементы с собственной логикой внутри

// Что такое директивы и зачем они нужны в AngularJS?
// Вообще директивы в AngularJS являются одной из самых крутых фич!!!
// Они позволяют инкапсулировать  кусок кода в какой-то компонент, чтобы потом его переиспользовать
// Одним из примеров может быть календарь, написанный на JQuery, который легко можно инкапсулировать внутри директивы и потом переиспользовать в любом месте нашего приложения
// Давайте посмотрим как используются директивы.
// Создадим div c атрибутом foo <div foo></div> Как вы понимаете такого атрибута нет!
// теперь в нашем main.js напишемvar app = angular.module('app', []);  app.directive('foo', function(){ });
//Директивы определеляются в AngularJS c помощью спецслова directive. Есть два вариант описания directive короткий и полный. 

//Короткий на самом деле используется редко!!!
// Но чтобы короткий вариант нас не смущал Разберем сначала его

//app.directive('foo', function(){
    // return function(scope, element, attrs){
//        console.log('this is my directive'); 
    // };
// });

// Если мы посмотрим в браузер то увидим в консоли this is my directive
// Теперь добавим внутрь div слово foo <div foo>foo</div>
// Теперь мы видим наш элемент на странице но это не просто элемент это директива!!!
// Это атрибут foo который мы создали в div отрабатывается в директивой и в консоли мы видим строку!!!


// Теперь давайте используем полное описание директивы!!!
// Что такое link. Link в директиве это функция, которая срабатывает уже после того как DOM-элемент отрисовался на странице
// давайте теперь посмотрим что такое scope, element, attrs
// app.directive('foo', function(){
    // return {
        // link : function (scope, element, attrs){
        // console.log('scope', scope); 
        // console.log('element', element); 
        // console.log('attrs', attrs); 
     // }
     // };

// если мы посмотрим в консоль браузера, то увидим что scope - это объект, который полностью является областю видимости нашей директивы.Element - это JQlite element, внутри него мы видим наш DOM елемент и attrs-  это все //атрибуты которые есть на нашей директиве. Например наш атрибут foo, который пустой так как мы его не задали

// Что мы можем сделать??
// мы можем применить на нее какие то JQuery изменения!!!

// app.directive('foo', function(){
    // return {
        // link : function (scope, element, attrs){
        // console.log('scope', scope); 
        // console.log('element', element); 
        // console.log('attrs', attrs); 
        // elements.text('this is magic directive');
     // }
     // };
// });

// Если мы теперь посмотрим в браузер то увидим что в div выводится текст this is magic directive!!!

// Давайте попробуем повесить event click на нашу директиву чтобы по нажатию на кнопку у нас менялась надпись Foo на Bar и обратно
// ДЛя этого вешаем event click и указываем функцюи которая будет происходить по клику
// app.directive('foo', function(){
    // return {
        // link : function (scope, element, attrs){
        // element.on('click', function(){
            // console.log('click');
        // });
     // }
     // };
// });

// В итого видим что обычный клик по надписи дива foo и в консоле появляется строка click!!! Все работает!!!
// Теперь давайте добавим условие если в элементе тексот foo то мы меняем его на bar и наоброт

// Повторим еще раз. Мы повесели на элемент клик и проверяем условие при клике если foo то меняем на bar и наоборот
// добавим несколько дивов <div foo>foo</div>
//div foo>foo</div>
//<div foo>foo</div>
//<div foo>foo</div>
//<div foo>foo</div>в шаблон и посмотрим 
// Все работает нормально строки измняются каждай сама по себе сколько угодно раз ТАК МЫ СОЗДАЛИ ПРОСТЕЙШУЮ ДИРЕКТИВУ КОТОРУЮ МОЖНО ПЕРЕИСПОЛЬЗОВАТЬ СКОЛЬКО УГОДНО РАЗ В ЛЮБОЙ ЧАСТИ ПРИЛОЖЕНИЯ МЫ МОЖЕМ СКОЛЬКО УГОДНО НАЖИМАТЬ НА ЭЛЕМЕНТ И ОН БУДЕТ МЕНЯТЬ ТЕКСТ



var app = angular.module('app', []);

app.directive('foo', function () {
    return {
        link: function (scope, element, attrs) {
            element.on('click', function () {
                if (element.text() === 'foo') {
                    element.text('bar');
                } else {
                    element.text('foo');
                }
            });
        }
    };
});
    

